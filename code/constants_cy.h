/* Generated by Cython 3.0.0b3 */

#ifndef __PYX_HAVE__code__constants_cy
#define __PYX_HAVE__code__constants_cy

#include "Python.h"

#ifndef __PYX_HAVE_API__code__constants_cy

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C int X;
__PYX_EXTERN_C int Y;
__PYX_EXTERN_C int X_SUB;
__PYX_EXTERN_C int Y_SUB;
__PYX_EXTERN_C __pyx_ctuple_int__and_int ORIGIN;
__PYX_EXTERN_C float G;
__PYX_EXTERN_C float SOFTEN;
__PYX_EXTERN_C float RADIAN_DIV;
__PYX_EXTERN_C int SIZE;
__PYX_EXTERN_C int BODIES;
__PYX_EXTERN_C int OUTPUT;
__PYX_EXTERN_C double TIMESTEP;

#endif /* !__PYX_HAVE_API__code__constants_cy */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initconstants_cy(void);
#else
/* WARNING: Use PyImport_AppendInittab("constants_cy", PyInit_constants_cy) instead of calling PyInit_constants_cy directly from Python 3.5 */
PyMODINIT_FUNC PyInit_constants_cy(void);

#if PY_VERSION_HEX >= 0x03050000 && (defined(__GNUC__) || defined(__clang__) || defined(_MSC_VER) || (defined(__cplusplus) && __cplusplus >= 201402L))
#if defined(__cplusplus) && __cplusplus >= 201402L
[[deprecated("Use PyImport_AppendInittab(\"constants_cy\", PyInit_constants_cy) instead of calling PyInit_constants_cy directly.")]] inline
#elif defined(__GNUC__) || defined(__clang__)
__attribute__ ((__deprecated__("Use PyImport_AppendInittab(\"constants_cy\", PyInit_constants_cy) instead of calling PyInit_constants_cy directly."), __unused__)) __inline__
#elif defined(_MSC_VER)
__declspec(deprecated("Use PyImport_AppendInittab(\"constants_cy\", PyInit_constants_cy) instead of calling PyInit_constants_cy directly.")) __inline
#endif
static PyObject* __PYX_WARN_IF_PyInit_constants_cy_INIT_CALLED(PyObject* res) {
  return res;
}
#define PyInit_constants_cy() __PYX_WARN_IF_PyInit_constants_cy_INIT_CALLED(PyInit_constants_cy())
#endif
#endif

#endif /* !__PYX_HAVE__code__constants_cy */
